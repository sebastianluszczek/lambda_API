name: terraform-plan

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

env:
  TF_VERSION: 1.0.2
  NODE_VERSION: 12.x

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    name: API CI

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run tests
        run: |
          npm ci
          npm run test

  terrafor:
    runs-on: ubuntu-latest
    name: Create terraform plan

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build lambdas
        run: |
          npm ci
          npm run build:dev

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # - name: Setup AWS credentials
      #   run: |
      #     mkdir -p .aws
      #     echo "[amazeddev]" > .aws/credentials
      #     echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> .aws/credentials
      #     echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .aws/credentials

      - name: Terraform Init
        run: terraform init -backend-config=config/config.remote
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
