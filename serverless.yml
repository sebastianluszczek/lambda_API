service: sls-api
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: amazeddev
  region: eu-central-1
  environment:
    tableName: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamoDB:*
      Resource: '*'

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

package:
  individually: true

custom:
  tableName: users
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: migrations

functions:
  getUsers:
    handler: src/lambdas/getUsers.handler
    events:
      - http:
          path: users/
          method: GET
          cors: true
  getUser:
    handler: src/lambdas/getUser.handler
    events:
      - http:
          path: users/{ID}
          method: GET
          cors: true
  createUser:
    handler: src/lambdas/createUser.handler
    events:
      - http:
          path: users/
          method: POST
          cors: true
  deleteUser:
    handler: src/lambdas/deleteUser.handler
    events:
      - http:
          path: users/{ID}
          method: DELETE
          cors: true

resources:
  Resources:
    UsersDDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
